using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace merge_sort
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[] A = { 12, 34, 21, 10, 23, 43, 99, 2 };
            
            int[] Result = merge_sort(A);
            Console.WriteLine("The sort of the array is : ");
            foreach (var item in Result)
            {
                Console.WriteLine(item);
            }
            Console.WriteLine();
        }

       static int[] merge_sort(int[]A)
        {
            int n=A.Length;
            int mid = n / 2;
            int[] left;
            int[] right;
            if (n <2) 
            {
                return A;
            }  
            else
            {
                left = new int[mid];
                right = new int[n-mid];
                for (int i = 0; i < left.Length; i++)
                {
                    left[i] = A[i]; 
                }
                for (int i = 0; i < right.Length; i++)
                {
                    right[i] = A[mid];
                    mid++;
                }
            }
            merge_sort(left);
            merge_sort(right);
            merge(left, right,A);
            return A;
        }
        static int[] merge(int[] left, int[] right, int[] A) 
        {
            int i = 0; int j = 0; int count = 0;
            while (count<A.Length)
            {
                if (i < left.Length && j < right.Length)
                {
                    if (left[i] < right[j])
                    {
                        A[count] = left[i];
                        i++;
                    }
                    else
                    {
                        A[count] = right[j];
                        j++;
                    }

                }
                else if (i == left.Length && j < right.Length)
                {
                    A[count] = right[j];
                    j++;
                }
                else if (j == right.Length && i < left.Length) 
                {
                    A[count] = left[i];
                    i++;
                }
                count++;
            }
            return A;
        }
    }
}
